<?php

namespace App\Controller\Back;

use App\Entity\Exploitant;
use App\Form\ExploitantType;
use App\Repository\ExploitantRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/back/exploitant')]
class ExploitantController extends AbstractController
{
    #[Route('/', name: 'app_back_exploitant_index', methods: ['GET'])]
    public function index(ExploitantRepository $exploitantRepository): Response
    {
        return $this->render('back/exploitant/index.html.twig', [
            'exploitants' => $exploitantRepository->findAll(),
        ]);
    }

    #[Route('/new', name: 'app_back_exploitant_new', methods: ['GET', 'POST'])]
    public function new(Request $request, ExploitantRepository $exploitantRepository): Response
    {
        $exploitant = new Exploitant();
        $form = $this->createForm(ExploitantType::class, $exploitant);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $exploitantRepository->save($exploitant, true);

            return $this->redirectToRoute('app_back_exploitant_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('back/exploitant/new.html.twig', [
            'exploitant' => $exploitant,
            'form' => $form,
        ]);
    }

    #[Route('/{id}', name: 'app_back_exploitant_show', methods: ['GET'])]
    public function show(Exploitant $exploitant): Response
    {
        return $this->render('back/exploitant/show.html.twig', [
            'exploitant' => $exploitant,
        ]);
    }

    #[Route('/{id}/edit', name: 'app_back_exploitant_edit', methods: ['GET', 'POST'])]
    public function edit(Request $request, Exploitant $exploitant, ExploitantRepository $exploitantRepository): Response
    {
        $form = $this->createForm(ExploitantType::class, $exploitant);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $exploitantRepository->save($exploitant, true);

            return $this->redirectToRoute('app_back_exploitant_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('back/exploitant/edit.html.twig', [
            'exploitant' => $exploitant,
            'form' => $form,
        ]);
    }

    #[Route('/{id}', name: 'app_back_exploitant_delete', methods: ['POST'])]
    public function delete(Request $request, Exploitant $exploitant, ExploitantRepository $exploitantRepository): Response
    {
        if ($this->isCsrfTokenValid('delete'.$exploitant->getId(), $request->request->get('_token'))) {
            $exploitantRepository->remove($exploitant, true);
        }

        return $this->redirectToRoute('app_back_exploitant_index', [], Response::HTTP_SEE_OTHER);
    }
}
